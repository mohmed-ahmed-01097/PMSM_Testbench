% -------------------------------------------------------------------
%  Generated by MATLAB on 3-Jun-2021 14:37:11
%  MATLAB version: 9.8.0.1323502 (R2020a)
% -------------------------------------------------------------------
                      
clear all;
clc
C_LST=100e-6;   
S_LST=1e-3;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% Parameters %%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%
CtrlMode= Simulink.Parameter;
CtrlMode.Value = 1;
CtrlMode.CoderInfo.StorageClass = 'Custom';
CtrlMode.CoderInfo.Identifier = '';
%CtrlMode.CoderInfo.Alignment = -1;
%CtrlMode.CoderInfo.CustomAttributes.HeaderFile = '';
%CtrlMode.CoderInfo.CustomAttributes.DefinitionFile = '';
%CtrlMode.CoderInfo.CustomAttributes.Owner = '';
%CtrlMode.CoderInfo.CustomAttributes.PreserveDimensions = false;
%CtrlMode.Description = 'Reference speed in rpm';
CtrlMode.DataType = 'single';
CtrlMode.Min = 0;
CtrlMode.Max = 1;
%CtrlMode.DocUnits = '';
%% 
SpdDecreasingStep= Simulink.Parameter;
SpdDecreasingStep.Value = 0.01;
SpdDecreasingStep.CoderInfo.StorageClass = 'Custom';
SpdDecreasingStep.CoderInfo.Identifier = '';
%SpdDecreasingStep.CoderInfo.Alignment = -1;
%SpdDecreasingStep.CoderInfo.CustomAttributes.HeaderFile = '';
%SpdDecreasingStep.CoderInfo.CustomAttributes.DefinitionFile = '';
%SpdDecreasingStep.CoderInfo.CustomAttributes.Owner = '';
%SpdDecreasingStep.CoderInfo.CustomAttributes.PreserveDimensions = false;
%SpdDecreasingStep.Description = 'Reference speed in rpm';
SpdDecreasingStep.DataType = 'single';
SpdDecreasingStep.Min = 0;
SpdDecreasingStep.Max = 100;
%SpdDecreasingStep.DocUnits = '';
%% 

TqDecreasingStep= Simulink.Parameter;
TqDecreasingStep.Value = 0.000003;
TqDecreasingStep.CoderInfo.StorageClass = 'Custom';
TqDecreasingStep.CoderInfo.Identifier = '';
%TqDecreasingStep.CoderInfo.Alignment = -1;
%TqDecreasingStep.CoderInfo.CustomAttributes.HeaderFile = '';
%TqDecreasingStep.CoderInfo.CustomAttributes.DefinitionFile = '';
%TqDecreasingStep.CoderInfo.CustomAttributes.Owner = '';
%TqDecreasingStep.CoderInfo.CustomAttributes.PreserveDimensions = false;
%TqDecreasingStep.Description = 'Reference speed in rpm';
TqDecreasingStep.DataType = 'single';
TqDecreasingStep.Min = 0;
TqDecreasingStep.Max = 100;
%TqDecreasingStep.DocUnits = '';
%% 

TrgTime= Simulink.Parameter;
TrgTime.Value = 10000;
TrgTime.CoderInfo.StorageClass = 'Custom';
TrgTime.CoderInfo.Identifier = '';
%TrgTime.CoderInfo.Alignment = -1;
%TrgTime.CoderInfo.CustomAttributes.HeaderFile = '';
%TrgTime.CoderInfo.CustomAttributes.DefinitionFile = '';
%TrgTime.CoderInfo.CustomAttributes.Owner = '';
%TrgTime.CoderInfo.CustomAttributes.PreserveDimensions = false;
%TrgTime.Description = 'Reference speed in rpm';
TrgTime.DataType = 'single';
TrgTime.Min = 0;
TrgTime.Max = 10000000;
%TrgTime.DocUnits = '';
%% 

PMflux= Simulink.Parameter;
PMflux.Value = 0.0064;
PMflux.CoderInfo.StorageClass = 'Custom';
PMflux.CoderInfo.Identifier = '';
%PMflux.CoderInfo.Alignment = -1;
%PMflux.CoderInfo.CustomAttributes.HeaderFile = '';
%PMflux.CoderInfo.CustomAttributes.DefinitionFile = '';
%PMflux.CoderInfo.CustomAttributes.Owner = '';
%PMflux.CoderInfo.CustomAttributes.PreserveDimensions = false;
%PMflux.Description = 'Reference speed in rpm';
PMflux.DataType = 'single';
PMflux.Min = 0;
PMflux.Max = 10;
%PMflux.DocUnits = '';
%% 

UP_TQLimit_SpdCtrl= Simulink.Parameter;
UP_TQLimit_SpdCtrl.Value = 0.12;
UP_TQLimit_SpdCtrl.CoderInfo.StorageClass = 'Custom';
UP_TQLimit_SpdCtrl.CoderInfo.Identifier = '';
%UP_TQLimit_SpdCtrl.CoderInfo.Alignment = -1;
%UP_TQLimit_SpdCtrl.CoderInfo.CustomStorageClass = 'ConstVolatile';
%UP_TQLimit_SpdCtrl.CoderInfo.CustomAttributes.HeaderFile = '';
%UP_TQLimit_SpdCtrl.CoderInfo.CustomAttributes.DefinitionFile = '';
%UP_TQLimit_SpdCtrl.CoderInfo.CustomAttributes.Owner = '';
%UP_TQLimit_SpdCtrl.CoderInfo.CustomAttributes.PreserveDimensions = false;
%UP_TQLimit_SpdCtrl.Description = 'Reference speed in rpm';
UP_TQLimit_SpdCtrl.DataType = 'single';
UP_TQLimit_SpdCtrl.Min = 0;
UP_TQLimit_SpdCtrl.Max = 10;
%UP_TQLimit_SpdCtrl.DocUnits = '';
%% 

Low_TQLimit_SpdCtrl= Simulink.Parameter;
Low_TQLimit_SpdCtrl.Value = -0.12;
Low_TQLimit_SpdCtrl.CoderInfo.StorageClass = 'Custom';
Low_TQLimit_SpdCtrl.CoderInfo.Identifier = '';
%Low_TQLimit_SpdCtrl.CoderInfo.Alignment = -1;
%Low_TQLimit_SpdCtrl.CoderInfo.CustomStorageClass = 'ConstVolatile';
%Low_TQLimit_SpdCtrl.CoderInfo.CustomAttributes.HeaderFile = '';
%Low_TQLimit_SpdCtrl.CoderInfo.CustomAttributes.DefinitionFile = '';
%Low_TQLimit_SpdCtrl.CoderInfo.CustomAttributes.Owner = '';
%Low_TQLimit_SpdCtrl.CoderInfo.CustomAttributes.PreserveDimensions = false;
%Low_TQLimit_SpdCtrl.Description = 'Reference speed in rpm';
Low_TQLimit_SpdCtrl.DataType = 'single';
Low_TQLimit_SpdCtrl.Min = -10;
Low_TQLimit_SpdCtrl.Max = 0;
%Low_TQLimit_SpdCtrl.DocUnits = '';
%% 

Low_TQLimit_TqCtrl= Simulink.Parameter;
Low_TQLimit_TqCtrl.Value = -0.04;
Low_TQLimit_TqCtrl.CoderInfo.StorageClass = 'Custom';
Low_TQLimit_TqCtrl.CoderInfo.Identifier = '';
%Low_TQLimit_TqCtrl.CoderInfo.Alignment = -1;
%Low_TQLimit_TqCtrl.CoderInfo.CustomStorageClass = 'ConstVolatile';
%Low_TQLimit_TqCtrl.CoderInfo.CustomAttributes.HeaderFile = '';
%Low_TQLimit_TqCtrl.CoderInfo.CustomAttributes.DefinitionFile = '';
%Low_TQLimit_TqCtrl.CoderInfo.CustomAttributes.Owner = '';
%Low_TQLimit_TqCtrl.CoderInfo.CustomAttributes.PreserveDimensions = false;
%Low_TQLimit_TqCtrl.Description = 'Reference speed in rpm';
Low_TQLimit_TqCtrl.DataType = 'single';
Low_TQLimit_TqCtrl.Min = -10;
Low_TQLimit_TqCtrl.Max = 0;
%Low_TQLimit_TqCtrl.DocUnits = '';
%% 

UP_TQLimit_TqCtrl= Simulink.Parameter;
UP_TQLimit_TqCtrl.Value = 0.04;
UP_TQLimit_TqCtrl.CoderInfo.StorageClass = 'Custom';
UP_TQLimit_TqCtrl.CoderInfo.Identifier = '';
%UP_TQLimit_TqCtrl.CoderInfo.Alignment = -1;
%UP_TQLimit_TqCtrl.CoderInfo.CustomStorageClass = 'ConstVolatile';
%UP_TQLimit_TqCtrl.CoderInfo.CustomAttributes.HeaderFile = '';
%UP_TQLimit_TqCtrl.CoderInfo.CustomAttributes.DefinitionFile = '';
%UP_TQLimit_TqCtrl.CoderInfo.CustomAttributes.Owner = '';
%UP_TQLimit_TqCtrl.CoderInfo.CustomAttributes.PreserveDimensions = false;
%UP_TQLimit_TqCtrl.Description = 'Reference speed in rpm';
UP_TQLimit_TqCtrl.DataType = 'single';
UP_TQLimit_TqCtrl.Min = 0;
UP_TQLimit_TqCtrl.Max = 10;
%UP_TQLimit_TqCtrl.DocUnits = '';
%% 

WaitingTimeAfterAlignment_sec= Simulink.Parameter;
WaitingTimeAfterAlignment_sec.Value = 5;
WaitingTimeAfterAlignment_sec.CoderInfo.StorageClass = 'Custom';
WaitingTimeAfterAlignment_sec.CoderInfo.Identifier = '';
%WaitingTimeAfterAlignment_sec.CoderInfo.Alignment = -1;
%WaitingTimeAfterAlignment_sec.CoderInfo.CustomStorageClass = 'ConstVolatile';
%WaitingTimeAfterAlignment_sec.CoderInfo.CustomAttributes.HeaderFile = '';
%WaitingTimeAfterAlignment_sec.CoderInfo.CustomAttributes.DefinitionFile = '';
%WaitingTimeAfterAlignment_sec.CoderInfo.CustomAttributes.Owner = '';
%WaitingTimeAfterAlignment_sec.CoderInfo.CustomAttributes.PreserveDimensions = false;
%WaitingTimeAfterAlignment_sec.Description = 'Reference speed in rpm';
WaitingTimeAfterAlignment_sec.DataType = 'single';
WaitingTimeAfterAlignment_sec.Min = 0;
WaitingTimeAfterAlignment_sec.Max = 100;
%WaitingTimeAfterAlignment_sec.DocUnits = '';
%% 

DelayTimeAfterOL_sec = Simulink.Parameter;
DelayTimeAfterOL_sec.Value = 5;
DelayTimeAfterOL_sec.CoderInfo.StorageClass = 'Custom';
DelayTimeAfterOL_sec.CoderInfo.Identifier = '';
%DelayTimeAfterOL_sec.CoderInfo.Alignment = -1;
%DelayTimeAfterOL_sec.CoderInfo.CustomStorageClass = 'ConstVolatile';
%DelayTimeAfterOL_sec.CoderInfo.CustomAttributes.HeaderFile = '';
%DelayTimeAfterOL_sec.CoderInfo.CustomAttributes.DefinitionFile = '';
%DelayTimeAfterOL_sec.CoderInfo.CustomAttributes.Owner = '';
%DelayTimeAfterOL_sec.CoderInfo.CustomAttributes.PreserveDimensions = false;
%DelayTimeAfterOL_secc.Description = 'Reference speed in rpm';
DelayTimeAfterOL_sec.DataType = 'single';
DelayTimeAfterOL_sec.Min = 0;
DelayTimeAfterOL_sec.Max = 100;
%DelayTimeAfterOL_sec.DocUnits = '';

%%
Alignment_ReqTime_sec = Simulink.Parameter;
Alignment_ReqTime_sec.Value = 3;
Alignment_ReqTime_sec.CoderInfo.StorageClass = 'Custom';
Alignment_ReqTime_sec.CoderInfo.Identifier = '';
%Alignment_ReqTime_sec.CoderInfo.Alignment = -1;
%Alignment_ReqTime_sec.CoderInfo.CustomStorageClass = 'ConstVolatile';
%Alignment_ReqTime_sec.CoderInfo.CustomAttributes.HeaderFile = '';
%Alignment_ReqTime_sec.CoderInfo.CustomAttributes.DefinitionFile = '';
%Alignment_ReqTime_sec.CoderInfo.CustomAttributes.Owner = '';
%Alignment_ReqTime_sec.CoderInfo.CustomAttributes.PreserveDimensions = false;
%Alignment_ReqTime_sec.Description = 'Reference speed in rpm';
Alignment_ReqTime_sec.DataType = 'single';
Alignment_ReqTime_sec.Min = 0;
Alignment_ReqTime_sec.Max = 20;
%Alignment_ReqTime_sec.DocUnits = '';
%% 


OL_ReqTime_sec = Simulink.Parameter;
OL_ReqTime_sec.Value = 1;
OL_ReqTime_sec.CoderInfo.StorageClass = 'Custom';
OL_ReqTime_sec.CoderInfo.Identifier = '';
%OL_ReqTime_sec.CoderInfo.Alignment = -1;
%OL_ReqTime_sec.CoderInfo.CustomStorageClass = 'ConstVolatile';
%OL_ReqTime_sec.CoderInfo.CustomAttributes.HeaderFile = '';
%OL_ReqTime_sec.CoderInfo.CustomAttributes.DefinitionFile = '';
%OL_ReqTime_sec.CoderInfo.CustomAttributes.Owner = '';
%OL_ReqTime_sec.CoderInfo.CustomAttributes.PreserveDimensions = false;
%OL_ReqTime_sec.Description = 'Reference speed in rpm';
OL_ReqTime_sec.DataType = 'single';
OL_ReqTime_sec.Min = 0;
OL_ReqTime_sec.Max = 20;
%OL_ReqTime_sec.DocUnits = '';
%% 

OL_IDcOvercurrent = Simulink.Parameter;
OL_IDcOvercurrent.Value = 5.5;
OL_IDcOvercurrent.CoderInfo.StorageClass = 'Custom';
OL_IDcOvercurrent.CoderInfo.Identifier = '';
%OL_IDcOvercurrent.CoderInfo.Alignment = -1;
%OL_IDcOvercurrent.CoderInfo.CustomStorageClass = 'ConstVolatile';
%OL_IDcOvercurrent.CoderInfo.CustomAttributes.HeaderFile = '';
%OL_IDcOvercurrent.CoderInfo.CustomAttributes.DefinitionFile = '';
%OL_IDcOvercurrent.CoderInfo.CustomAttributes.Owner = '';
%OL_IDcOvercurrent.CoderInfo.CustomAttributes.PreserveDimensions = false;
%OL_IDcOvercurrent.Description = 'Reference speed in rpm';
OL_IDcOvercurrent.DataType = 'single';
OL_IDcOvercurrent.Min = 0;
OL_IDcOvercurrent.Max =  7;
%OL_IDcOvercurrent.DocUnits = '';

%% P1000
PP = Simulink.Parameter;
PP.Value = 4;
PP.CoderInfo.StorageClass = 'Custom';
PP.CoderInfo.Identifier = '';
PP.CoderInfo.Alignment = -1;
PP.CoderInfo.CustomStorageClass = 'ConstVolatile';
PP.CoderInfo.CustomAttributes.HeaderFile = '';
PP.CoderInfo.CustomAttributes.DefinitionFile = '';
PP.CoderInfo.CustomAttributes.Owner = '';
PP.CoderInfo.CustomAttributes.PreserveDimensions = false;
PP.Description = 'polpair';
PP.DataType = 'int32';
PP.Min = 1;
PP.Max = 10;
PP.DocUnits = '-';

Nmax = Simulink.Parameter;
Nmax.Value = 6000;
Nmax.CoderInfo.StorageClass = 'Custom';
Nmax.CoderInfo.Identifier = '';
Nmax.CoderInfo.Alignment = -1;
Nmax.CoderInfo.CustomStorageClass = 'ConstVolatile';
Nmax.CoderInfo.CustomAttributes.HeaderFile = '';
Nmax.CoderInfo.CustomAttributes.DefinitionFile = '';
Nmax.CoderInfo.CustomAttributes.Owner = '';
Nmax.CoderInfo.CustomAttributes.PreserveDimensions = false;
Nmax.Description = 'polpair';
Nmax.DataType = 'int32';
Nmax.Min = 1;
Nmax.Max = 20000;
Nmax.DocUnits = '-';




DisablePWM_Selector = Simulink.Parameter;
DisablePWM_Selector.Value = 0;
DisablePWM_Selector.CoderInfo.StorageClass = 'Custom';
DisablePWM_Selector.CoderInfo.Identifier = '';
DisablePWM_Selector.CoderInfo.Alignment = -1;
DisablePWM_Selector.CoderInfo.CustomStorageClass = 'ConstVolatile';
DisablePWM_Selector.CoderInfo.CustomAttributes.HeaderFile = '';
DisablePWM_Selector.CoderInfo.CustomAttributes.DefinitionFile = '';
DisablePWM_Selector.CoderInfo.CustomAttributes.Owner = '';
DisablePWM_Selector.CoderInfo.CustomAttributes.PreserveDimensions = false;
DisablePWM_Selector.Description = 'select either without or with Disable the PWM during the Rotor Offset Calibration';
DisablePWM_Selector.DataType = 'uint8';
DisablePWM_Selector.Min = 0;
DisablePWM_Selector.Max = 1;
DisablePWM_Selector.DocUnits = '-';

DisablePWM = Simulink.Parameter;
DisablePWM.Value = 0;
DisablePWM.CoderInfo.StorageClass = 'Custom';
DisablePWM.CoderInfo.Identifier = '';
DisablePWM.CoderInfo.Alignment = -1;
DisablePWM.CoderInfo.CustomStorageClass = 'ConstVolatile';
DisablePWM.CoderInfo.CustomAttributes.HeaderFile = '';
DisablePWM.CoderInfo.CustomAttributes.DefinitionFile = '';
DisablePWM.CoderInfo.CustomAttributes.Owner = '';
DisablePWM.CoderInfo.CustomAttributes.PreserveDimensions = false;
DisablePWM.Description = 'Disable the PWM during the Rotor Offset Calibration';
DisablePWM.DataType = 'single';
DisablePWM.Min = 0;
DisablePWM.Max = 1;
DisablePWM.DocUnits = '';


RotorOffsetMotor1_Selector = Simulink.Parameter;
RotorOffsetMotor1_Selector.Value = 1;
RotorOffsetMotor1_Selector.CoderInfo.StorageClass = 'Custom';
RotorOffsetMotor1_Selector.CoderInfo.Identifier = '';
RotorOffsetMotor1_Selector.CoderInfo.Alignment = -1;
RotorOffsetMotor1_Selector.CoderInfo.CustomStorageClass = 'ConstVolatile';
RotorOffsetMotor1_Selector.CoderInfo.CustomAttributes.HeaderFile = '';
RotorOffsetMotor1_Selector.CoderInfo.CustomAttributes.DefinitionFile = '';
RotorOffsetMotor1_Selector.CoderInfo.CustomAttributes.Owner = '';
RotorOffsetMotor1_Selector.CoderInfo.CustomAttributes.PreserveDimensions = false;
RotorOffsetMotor1_Selector.Description = 'Feedback when the rotor offset of motor1 is completed ';
RotorOffsetMotor1_Selector.DataType = 'single';
RotorOffsetMotor1_Selector.Min = 0;
RotorOffsetMotor1_Selector.Max = 1;
RotorOffsetMotor1_Selector.DocUnits = '-';

RotorOffsetMotor2_Selector = Simulink.Parameter;
RotorOffsetMotor2_Selector.Value = 1;
RotorOffsetMotor2_Selector.CoderInfo.StorageClass = 'Custom';
RotorOffsetMotor2_Selector.CoderInfo.Identifier = '';
RotorOffsetMotor2_Selector.CoderInfo.Alignment = -1;
RotorOffsetMotor2_Selector.CoderInfo.CustomStorageClass = 'ConstVolatile';
RotorOffsetMotor2_Selector.CoderInfo.CustomAttributes.HeaderFile = '';
RotorOffsetMotor2_Selector.CoderInfo.CustomAttributes.DefinitionFile = '';
RotorOffsetMotor2_Selector.CoderInfo.CustomAttributes.Owner = '';
RotorOffsetMotor2_Selector.CoderInfo.CustomAttributes.PreserveDimensions = false;
RotorOffsetMotor2_Selector.Description = 'Feedback when the rotor offset of motor2 is completed ';
RotorOffsetMotor2_Selector.DataType = 'single';
RotorOffsetMotor2_Selector.Min = 0;
RotorOffsetMotor2_Selector.Max = 1;
RotorOffsetMotor2_Selector.DocUnits = '-';

%% Torque Control

TqCtrlRef = Simulink.Parameter;
TqCtrlRef.Value = 0.03;
TqCtrlRef.CoderInfo.StorageClass = 'Custom';
TqCtrlRef.CoderInfo.Identifier = '';
TqCtrlRef.CoderInfo.Alignment = -1;
TqCtrlRef.CoderInfo.CustomStorageClass = 'ConstVolatile';
TqCtrlRef.CoderInfo.CustomAttributes.HeaderFile = '';
TqCtrlRef.CoderInfo.CustomAttributes.DefinitionFile = '';
TqCtrlRef.CoderInfo.CustomAttributes.Owner = '';
TqCtrlRef.CoderInfo.CustomAttributes.PreserveDimensions = false;
TqCtrlRef.Description = 'Reference Torque';
TqCtrlRef.DataType = 'single';
TqCtrlRef.Min = -3;
TqCtrlRef.Max = 3;
TqCtrlRef.DocUnits = 'Nm';

%% 
TqCtrlSwitch = Simulink.Parameter;
TqCtrlSwitch.Value = 0;
TqCtrlSwitch.CoderInfo.StorageClass = 'Custom';
TqCtrlSwitch.CoderInfo.Identifier = '';
TqCtrlSwitch.CoderInfo.Alignment = -1;
TqCtrlSwitch.CoderInfo.CustomStorageClass = 'ConstVolatile';
TqCtrlSwitch.CoderInfo.CustomAttributes.HeaderFile = '';
TqCtrlSwitch.CoderInfo.CustomAttributes.DefinitionFile = '';
TqCtrlSwitch.CoderInfo.CustomAttributes.Owner = '';
TqCtrlSwitch.CoderInfo.CustomAttributes.PreserveDimensions = false;
TqCtrlSwitch.Description = 'Switch to select Speed Control "0" or Torque Control "1"';
TqCtrlSwitch.DataType = 'boolean';
TqCtrlSwitch.Min = 0;
TqCtrlSwitch.Max = 1;
%TqCtrlSwitch.DocUnits = '';

%%
MaxSpdLimit = Simulink.Parameter;
MaxSpdLimit.Value = 199; % +/-2000 rpm
MaxSpdLimit.CoderInfo.StorageClass = 'Custom';
MaxSpdLimit.CoderInfo.Identifier = '';
MaxSpdLimit.CoderInfo.Alignment = -1;
MaxSpdLimit.CoderInfo.CustomStorageClass = 'ConstVolatile';
MaxSpdLimit.CoderInfo.CustomAttributes.HeaderFile = '';
MaxSpdLimit.CoderInfo.CustomAttributes.DefinitionFile = '';
MaxSpdLimit.CoderInfo.CustomAttributes.Owner = '';
MaxSpdLimit.CoderInfo.CustomAttributes.PreserveDimensions = false;
MaxSpdLimit.Description = 'Maximum Allowed Speed';
MaxSpdLimit.DataType = 'single';
MaxSpdLimit.Min = -524; % -5000 rpm
MaxSpdLimit.Max =  524; % +5000 rpm
MaxSpdLimit.DocUnits = 'rad/sec';
%%
TqFilterConst = Simulink.Parameter;
TqFilterConst.Value = 0.001; %% ca. 100 ms
TqFilterConst.CoderInfo.StorageClass = 'Custom';
TqFilterConst.CoderInfo.Identifier = '';
TqFilterConst.CoderInfo.Alignment = -1;
TqFilterConst.CoderInfo.CustomStorageClass = 'ConstVolatile';
TqFilterConst.CoderInfo.CustomAttributes.HeaderFile = '';
TqFilterConst.CoderInfo.CustomAttributes.DefinitionFile = '';
TqFilterConst.CoderInfo.CustomAttributes.Owner = '';
TqFilterConst.CoderInfo.CustomAttributes.PreserveDimensions = false;
TqFilterConst.Description = 'Time constant of the FIR torque filter ';
TqFilterConst.DataType = 'single';
TqFilterConst.Min = 0;
TqFilterConst.Max = 1;
TqFilterConst.DocUnits = '-';

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
KpSpd = Simulink.Parameter;
KpSpd.Value = 1.5;
KpSpd.CoderInfo.StorageClass = 'Custom';
KpSpd.CoderInfo.Identifier = '';
KpSpd.CoderInfo.Alignment = -1;
KpSpd.CoderInfo.CustomStorageClass = 'ConstVolatile';
KpSpd.CoderInfo.CustomAttributes.HeaderFile = '';
KpSpd.CoderInfo.CustomAttributes.DefinitionFile = '';
KpSpd.CoderInfo.CustomAttributes.Owner = '';
KpSpd.CoderInfo.CustomAttributes.PreserveDimensions = false;
KpSpd.Description = 'propotinal factor of speed controller';
KpSpd.DataType = 'single';
KpSpd.Min = 0;
KpSpd.Max = 1000;
KpSpd.DocUnits = '';
%%
KpSpdOrg = Simulink.Parameter;
KpSpdOrg.Value = 0.014207315561740161;
KpSpdOrg.CoderInfo.StorageClass = 'Custom';
KpSpdOrg.CoderInfo.Identifier = '';
KpSpdOrg.CoderInfo.Alignment = -1;
KpSpdOrg.CoderInfo.CustomStorageClass = 'ConstVolatile';
KpSpdOrg.CoderInfo.CustomAttributes.HeaderFile = '';
KpSpdOrg.CoderInfo.CustomAttributes.DefinitionFile = '';
KpSpdOrg.CoderInfo.CustomAttributes.Owner = '';
KpSpdOrg.CoderInfo.CustomAttributes.PreserveDimensions = false;
KpSpdOrg.Description = 'propotinal factor of speed controller';
KpSpdOrg.DataType = 'single';
KpSpdOrg.Min = 0;
KpSpdOrg.Max = 1000;
KpSpdOrg.DocUnits = '';
%%
KiSpd = Simulink.Parameter;
KiSpd.Value = 1;
KiSpd.CoderInfo.StorageClass = 'Custom';
KiSpd.CoderInfo.Identifier = '';
KiSpd.CoderInfo.Alignment = -1;
KiSpd.CoderInfo.CustomStorageClass = 'ConstVolatile';
KiSpd.CoderInfo.CustomAttributes.HeaderFile = '';
KiSpd.CoderInfo.CustomAttributes.DefinitionFile = '';
KiSpd.CoderInfo.CustomAttributes.Owner = '';
KiSpd.CoderInfo.CustomAttributes.PreserveDimensions = false;
KiSpd.Description = 'propotinal factor of speed controller';
KiSpd.DataType = 'single';
KiSpd.Min = 0;
KiSpd.Max = 1000;
KiSpd.DocUnits = '';
%%
KiSpdOrg = Simulink.Parameter;
KiSpdOrg.Value = 0.00002231679909799742;
KiSpdOrg.CoderInfo.StorageClass = 'Custom';
KiSpdOrg.CoderInfo.Identifier = '';
KiSpdOrg.CoderInfo.Alignment = -1;
KiSpdOrg.CoderInfo.CustomStorageClass = 'ConstVolatile';
KiSpdOrg.CoderInfo.CustomAttributes.HeaderFile = '';
KiSpdOrg.CoderInfo.CustomAttributes.DefinitionFile = '';
KiSpdOrg.CoderInfo.CustomAttributes.Owner = '';
KiSpdOrg.CoderInfo.CustomAttributes.PreserveDimensions = false;
KiSpdOrg.Description = 'propotinal factor of speed controller';
KiSpdOrg.DataType = 'single';
KiSpdOrg.Min = 0;
KiSpdOrg.Max = 1000;
KiSpdOrg.DocUnits = '';
%% 
PISpdControllerSelector = Simulink.Parameter;
PISpdControllerSelector.Value = 0;
PISpdControllerSelector.CoderInfo.StorageClass = 'Custom';
PISpdControllerSelector.CoderInfo.Identifier = '';
PISpdControllerSelector.CoderInfo.Alignment = -1;
PISpdControllerSelector.CoderInfo.CustomStorageClass = 'ConstVolatile';
PISpdControllerSelector.CoderInfo.CustomAttributes.HeaderFile = '';
PISpdControllerSelector.CoderInfo.CustomAttributes.DefinitionFile = '';
PISpdControllerSelector.CoderInfo.CustomAttributes.Owner = '';
PISpdControllerSelector.CoderInfo.CustomAttributes.PreserveDimensions = false;
PISpdControllerSelector.Description = 'selector to test the correct PI speed controller';
PISpdControllerSelector.DataType = 'uint8';
PISpdControllerSelector.Min = 0;
PISpdControllerSelector.Max = 1;
PISpdControllerSelector.DocUnits = '';
%%
IQ_REF_MAX = Simulink.Parameter;
IQ_REF_MAX.Value = 2.3;
IQ_REF_MAX.CoderInfo.StorageClass = 'Custom';
IQ_REF_MAX.CoderInfo.Identifier = '';
IQ_REF_MAX.CoderInfo.Alignment = -1;
IQ_REF_MAX.CoderInfo.CustomStorageClass = 'ConstVolatile';
IQ_REF_MAX.CoderInfo.CustomAttributes.HeaderFile = '';
IQ_REF_MAX.CoderInfo.CustomAttributes.DefinitionFile = '';
IQ_REF_MAX.CoderInfo.CustomAttributes.Owner = '';
IQ_REF_MAX.CoderInfo.CustomAttributes.PreserveDimensions = false;
IQ_REF_MAX.Description = 'Maximum allowed Iq current to limit the output of the speed controller';
IQ_REF_MAX.DataType = 'single';
IQ_REF_MAX.Min = -100;
IQ_REF_MAX.Max = 100;
IQ_REF_MAX.DocUnits = 'A';

%%
I_MAX = Simulink.Parameter;
I_MAX.Value = 20.625;
I_MAX.CoderInfo.StorageClass = 'Custom';
I_MAX.CoderInfo.Identifier = '';
I_MAX.CoderInfo.Alignment = -1;
I_MAX.CoderInfo.CustomStorageClass = 'ConstVolatile';
I_MAX.CoderInfo.CustomAttributes.HeaderFile = '';
I_MAX.CoderInfo.CustomAttributes.DefinitionFile = '';
I_MAX.CoderInfo.CustomAttributes.Owner = '';
I_MAX.CoderInfo.CustomAttributes.PreserveDimensions = false;
I_MAX.Description = 'Maximum current used for current measurement scaling calibration';
I_MAX.DataType = 'single';
I_MAX.Min = -100;
I_MAX.Max = 100;
I_MAX.DocUnits = 'A';
%%
PhA_Offset = Simulink.Parameter;
PhA_Offset.Value = 20.625;
PhA_Offset.CoderInfo.StorageClass = 'Custom';
PhA_Offset.CoderInfo.Identifier = '';
PhA_Offset.CoderInfo.Alignment = -1;
PhA_Offset.CoderInfo.CustomStorageClass = 'ConstVolatile';
PhA_Offset.CoderInfo.CustomAttributes.HeaderFile = '';
PhA_Offset.CoderInfo.CustomAttributes.DefinitionFile = '';
PhA_Offset.CoderInfo.CustomAttributes.Owner = '';
PhA_Offset.CoderInfo.CustomAttributes.PreserveDimensions = false;
PhA_Offset.Description = 'Offset current value of phase A, which used for current calibration';
PhA_Offset.DataType = 'single';
PhA_Offset.Min = -100;
PhA_Offset.Max = 100;
PhA_Offset.DocUnits = 'A';

%%
PhB_Offset = Simulink.Parameter;
PhB_Offset.Value = 20.625;
PhB_Offset.CoderInfo.StorageClass = 'Custom';
PhB_Offset.CoderInfo.Identifier = '';
PhB_Offset.CoderInfo.Alignment = -1;
PhB_Offset.CoderInfo.CustomStorageClass = 'ConstVolatile';
PhB_Offset.CoderInfo.CustomAttributes.HeaderFile = '';
PhB_Offset.CoderInfo.CustomAttributes.DefinitionFile = '';
PhB_Offset.CoderInfo.CustomAttributes.Owner = '';
PhB_Offset.CoderInfo.CustomAttributes.PreserveDimensions = false;
PhB_Offset.Description = 'Offset current value of phase B, which used for current calibration';
PhB_Offset.DataType = 'single';
PhB_Offset.Min = -100;
PhB_Offset.Max = 100;
PhB_Offset.DocUnits = 'A';


%%
SPEED_UP_INC = Simulink.Parameter;
SPEED_UP_INC.Value = 50;
SPEED_UP_INC.CoderInfo.StorageClass = 'Custom';
SPEED_UP_INC.CoderInfo.Identifier = '';
SPEED_UP_INC.CoderInfo.Alignment = -1;
SPEED_UP_INC.CoderInfo.CustomStorageClass = 'ConstVolatile';
SPEED_UP_INC.CoderInfo.CustomAttributes.HeaderFile = '';
SPEED_UP_INC.CoderInfo.CustomAttributes.DefinitionFile = '';
SPEED_UP_INC.CoderInfo.CustomAttributes.Owner = '';
SPEED_UP_INC.CoderInfo.CustomAttributes.PreserveDimensions = false;
SPEED_UP_INC.Description = 'Gain used to decrease the reference speed (SPEED_CMD)using push botton on the MPC5744P board ';
SPEED_UP_INC.DataType = 'single';
SPEED_UP_INC.Min = -1000;
SPEED_UP_INC.Max = 1000;
SPEED_UP_INC.DocUnits = '';
%%
SPEED_DOWN_INC = Simulink.Parameter;
SPEED_DOWN_INC.Value = 50;
SPEED_DOWN_INC.CoderInfo.StorageClass = 'Custom';
SPEED_DOWN_INC.CoderInfo.Identifier = '';
SPEED_DOWN_INC.CoderInfo.Alignment = -1;
SPEED_DOWN_INC.CoderInfo.CustomStorageClass = 'ConstVolatile';
SPEED_DOWN_INC.CoderInfo.CustomAttributes.HeaderFile = '';
SPEED_DOWN_INC.CoderInfo.CustomAttributes.DefinitionFile = '';
SPEED_DOWN_INC.CoderInfo.CustomAttributes.Owner = '';
SPEED_DOWN_INC.CoderInfo.CustomAttributes.PreserveDimensions = false;
SPEED_DOWN_INC.Description = 'Gain used to decrease the reference speed (SPEED_CMD)using push botton on the MPC5744P board ';
SPEED_DOWN_INC.DataType = 'single';
SPEED_DOWN_INC.Min = -1000;
SPEED_DOWN_INC.Max = 1000;
SPEED_DOWN_INC.DocUnits = '';

%%
SPEED_LOOP_CNTR = Simulink.Parameter;
SPEED_LOOP_CNTR.Value = 10;
SPEED_LOOP_CNTR.CoderInfo.StorageClass = 'Custom';
SPEED_LOOP_CNTR.CoderInfo.Identifier = '';
SPEED_LOOP_CNTR.CoderInfo.Alignment = -1;
SPEED_LOOP_CNTR.CoderInfo.CustomStorageClass = 'ConstVolatile';
SPEED_LOOP_CNTR.CoderInfo.CustomAttributes.HeaderFile = '';
SPEED_LOOP_CNTR.CoderInfo.CustomAttributes.DefinitionFile = '';
SPEED_LOOP_CNTR.CoderInfo.CustomAttributes.Owner = '';
SPEED_LOOP_CNTR.CoderInfo.CustomAttributes.PreserveDimensions = false;
SPEED_LOOP_CNTR.Description = 'speed loop counter, which used to determine who many current loops are over to recall the speed loop  ';
SPEED_LOOP_CNTR.DataType = 'single';
SPEED_LOOP_CNTR.Min = -1000;
SPEED_LOOP_CNTR.Max = 1000;
SPEED_LOOP_CNTR.DocUnits = '';
%%
VDC_OVERVOLTAGE = Simulink.Parameter;
VDC_OVERVOLTAGE.Value = 18;
VDC_OVERVOLTAGE.CoderInfo.StorageClass = 'Custom';
VDC_OVERVOLTAGE.CoderInfo.Identifier = '';
VDC_OVERVOLTAGE.CoderInfo.Alignment = -1;
VDC_OVERVOLTAGE.CoderInfo.CustomStorageClass = 'ConstVolatile';
VDC_OVERVOLTAGE.CoderInfo.CustomAttributes.HeaderFile = '';
VDC_OVERVOLTAGE.CoderInfo.CustomAttributes.DefinitionFile = '';
VDC_OVERVOLTAGE.CoderInfo.CustomAttributes.Owner = '';
VDC_OVERVOLTAGE.CoderInfo.CustomAttributes.PreserveDimensions = false;
VDC_OVERVOLTAGE.Description = 'Overvoltage protection  ';
VDC_OVERVOLTAGE.DataType = 'single';
VDC_OVERVOLTAGE.Min = -1000;
VDC_OVERVOLTAGE.Max = 1000;
VDC_OVERVOLTAGE.DocUnits = '';


%% VDC_UNDERVOLTAGE=8;
VDC_UNDERVOLTAGE = Simulink.Parameter;
VDC_UNDERVOLTAGE.Value = 8;
VDC_UNDERVOLTAGE.CoderInfo.StorageClass = 'Custom';
VDC_UNDERVOLTAGE.CoderInfo.Identifier = '';
VDC_UNDERVOLTAGE.CoderInfo.Alignment = -1;
VDC_UNDERVOLTAGE.CoderInfo.CustomStorageClass = 'ConstVolatile';
VDC_UNDERVOLTAGE.CoderInfo.CustomAttributes.HeaderFile = '';
VDC_UNDERVOLTAGE.CoderInfo.CustomAttributes.DefinitionFile = '';
VDC_UNDERVOLTAGE.CoderInfo.CustomAttributes.Owner = '';
VDC_UNDERVOLTAGE.CoderInfo.CustomAttributes.PreserveDimensions = false;
VDC_UNDERVOLTAGE.Description = 'Undervoltage protection ';
VDC_UNDERVOLTAGE.DataType = 'single';
VDC_UNDERVOLTAGE.Min = -1000;
VDC_UNDERVOLTAGE.Max = 1000;
VDC_UNDERVOLTAGE.DocUnits = '';

%%
SpeedThresholdOvercurrent = Simulink.Parameter;
SpeedThresholdOvercurrent.Value = 0;
SpeedThresholdOvercurrent.CoderInfo.StorageClass = 'Custom';
SpeedThresholdOvercurrent.CoderInfo.Identifier = '';
SpeedThresholdOvercurrent.CoderInfo.Alignment = -1;
SpeedThresholdOvercurrent.CoderInfo.CustomStorageClass = 'ConstVolatile';
SpeedThresholdOvercurrent.CoderInfo.CustomAttributes.HeaderFile = '';
SpeedThresholdOvercurrent.CoderInfo.CustomAttributes.DefinitionFile = '';
SpeedThresholdOvercurrent.CoderInfo.CustomAttributes.Owner = '';
SpeedThresholdOvercurrent.CoderInfo.CustomAttributes.PreserveDimensions = false;
SpeedThresholdOvercurrent.Description = 'This is speed threshold in rad/sec, which is used to switch the another IDc overcurrent value to meet the high current of Teknic M-2310P-LN-04K during the rotor alignment';
SpeedThresholdOvercurrent.DataType = 'single';
SpeedThresholdOvercurrent.Min = 0;
SpeedThresholdOvercurrent.Max = 40;
SpeedThresholdOvercurrent.DocUnits = '';

%%
SPEED_CMD = Simulink.Parameter;
SPEED_CMD.Value = 500;
SPEED_CMD.CoderInfo.StorageClass = 'Custom';
SPEED_CMD.CoderInfo.Identifier = '';
SPEED_CMD.CoderInfo.Alignment = -1;
SPEED_CMD.CoderInfo.CustomStorageClass = 'ConstVolatile';
SPEED_CMD.CoderInfo.CustomAttributes.HeaderFile = '';
SPEED_CMD.CoderInfo.CustomAttributes.DefinitionFile = '';
SPEED_CMD.CoderInfo.CustomAttributes.Owner = '';
SPEED_CMD.CoderInfo.CustomAttributes.PreserveDimensions = false;
SPEED_CMD.Description = 'Reference speed in rpm';
SPEED_CMD.DataType = 'single';
SPEED_CMD.Min = -2200;
SPEED_CMD.Max =  2200;
SPEED_CMD.DocUnits = '';
%%
KpId = Simulink.Parameter;
KpId.Value = 0.3;
KpId.CoderInfo.StorageClass = 'Custom';
KpId.CoderInfo.Identifier = '';
KpId.CoderInfo.Alignment = -1;
KpId.CoderInfo.CustomStorageClass = 'ConstVolatile';
KpId.CoderInfo.CustomAttributes.HeaderFile = '';
KpId.CoderInfo.CustomAttributes.DefinitionFile = '';
KpId.CoderInfo.CustomAttributes.Owner = '';
KpId.CoderInfo.CustomAttributes.PreserveDimensions = false;
KpId.Description = 'proportional parameter Kp of the ID-current controller';
KpId.DataType = 'single';
KpId.Min = 0;
KpId.Max =  1000;
KpId.DocUnits = '';
%%
KpIq = Simulink.Parameter;
KpIq.Value = 0.3;
KpIq.CoderInfo.StorageClass = 'Custom';
KpIq.CoderInfo.Identifier = '';
KpIq.CoderInfo.Alignment = -1;
KpIq.CoderInfo.CustomStorageClass = 'ConstVolatile';
KpIq.CoderInfo.CustomAttributes.HeaderFile = '';
KpIq.CoderInfo.CustomAttributes.DefinitionFile = '';
KpIq.CoderInfo.CustomAttributes.Owner = '';
KpIq.CoderInfo.CustomAttributes.PreserveDimensions = false;
KpIq.Description = 'proportional parameter Kp of the IQ-current controller';
KpIq.DataType = 'single';
KpIq.Min = 0;
KpIq.Max =  1000;
KpIq.DocUnits = '';
%%
KiId = Simulink.Parameter;
KiId.Value = 0.5;
KiId.CoderInfo.StorageClass = 'Custom';
KiId.CoderInfo.Identifier = '';
KiId.CoderInfo.Alignment = -1;
KiId.CoderInfo.CustomStorageClass = 'ConstVolatile';
KiId.CoderInfo.CustomAttributes.HeaderFile = '';
KiId.CoderInfo.CustomAttributes.DefinitionFile = '';
KiId.CoderInfo.CustomAttributes.Owner = '';
KiId.CoderInfo.CustomAttributes.PreserveDimensions = false;
KiId.Description = 'proportional parameter Kp of the ID-current controller';
KiId.DataType = 'single';
KiId.Min = 0;
KiId.Max =  1000;
KiId.DocUnits = '';
%%
KiIq = Simulink.Parameter;
KiIq.Value = 0.5;
KiIq.CoderInfo.StorageClass = 'Custom';
KiIq.CoderInfo.Identifier = '';
KiIq.CoderInfo.Alignment = -1;
KiIq.CoderInfo.CustomStorageClass = 'ConstVolatile';
KiIq.CoderInfo.CustomAttributes.HeaderFile = '';
KiIq.CoderInfo.CustomAttributes.DefinitionFile = '';
KiIq.CoderInfo.CustomAttributes.Owner = '';
KiIq.CoderInfo.CustomAttributes.PreserveDimensions = false;
KiIq.Description = 'proportional parameter Kp of the IQ-current controller';
KiIq.DataType = 'single';
KiIq.Min = 0;
KiIq.Max =  1000;
KiIq.DocUnits = '';

%%
IDcFilterSelector = Simulink.Parameter;
IDcFilterSelector.Value = 0;
IDcFilterSelector.CoderInfo.StorageClass = 'Custom';
IDcFilterSelector.CoderInfo.Identifier = '';
IDcFilterSelector.CoderInfo.Alignment = -1;
IDcFilterSelector.CoderInfo.CustomStorageClass = 'ConstVolatile';
IDcFilterSelector.CoderInfo.CustomAttributes.HeaderFile = '';
IDcFilterSelector.CoderInfo.CustomAttributes.DefinitionFile = '';
IDcFilterSelector.CoderInfo.CustomAttributes.Owner = '';
IDcFilterSelector.CoderInfo.CustomAttributes.PreserveDimensions = false;
IDcFilterSelector.Description = 'Switch to select one of the applied IDc current filter ';
IDcFilterSelector.DataType = 'uint16';
IDcFilterSelector.Min = 0;
IDcFilterSelector.Max = 1;
IDcFilterSelector.DocUnits = '';
%%
IDcFilterConst = Simulink.Parameter;
IDcFilterConst.Value = 0.001;
IDcFilterConst.CoderInfo.StorageClass = 'Custom';
IDcFilterConst.CoderInfo.Identifier = '';
IDcFilterConst.CoderInfo.Alignment = -1;
IDcFilterConst.CoderInfo.CustomStorageClass = 'ConstVolatile';
IDcFilterConst.CoderInfo.CustomAttributes.HeaderFile = '';
IDcFilterConst.CoderInfo.CustomAttributes.DefinitionFile = '';
IDcFilterConst.CoderInfo.CustomAttributes.Owner = '';
IDcFilterConst.CoderInfo.CustomAttributes.PreserveDimensions = false;
IDcFilterConst.Description = 'Time constant of the FIR IDc current filter ';
IDcFilterConst.DataType = 'single';
IDcFilterConst.Min = 0;
IDcFilterConst.Max = 1;
IDcFilterConst.DocUnits = '';

%% 
SpdFilterConst = Simulink.Parameter;
SpdFilterConst.Value = 0.0005;
SpdFilterConst.CoderInfo.StorageClass = 'Custom';
SpdFilterConst.CoderInfo.Identifier = '';
SpdFilterConst.CoderInfo.Alignment = -1;
SpdFilterConst.CoderInfo.CustomStorageClass = 'ConstVolatile';
SpdFilterConst.CoderInfo.CustomAttributes.HeaderFile = '';
SpdFilterConst.CoderInfo.CustomAttributes.DefinitionFile = '';
SpdFilterConst.CoderInfo.CustomAttributes.Owner = '';
SpdFilterConst.CoderInfo.CustomAttributes.PreserveDimensions = false;
SpdFilterConst.Description = 'Time constant of the FIR speed filter ';
SpdFilterConst.DataType = 'single';
SpdFilterConst.Min = 0;
SpdFilterConst.Max = 1;
SpdFilterConst.DocUnits = '';

%%
AngleChangeDir = Simulink.Parameter;
AngleChangeDir.Value = 1;
AngleChangeDir.CoderInfo.StorageClass = 'Custom';
AngleChangeDir.CoderInfo.Identifier = '';
AngleChangeDir.CoderInfo.Alignment = -1;
AngleChangeDir.CoderInfo.CustomStorageClass = 'ConstVolatile';
AngleChangeDir.CoderInfo.CustomAttributes.HeaderFile = '';
AngleChangeDir.CoderInfo.CustomAttributes.DefinitionFile = '';
AngleChangeDir.CoderInfo.CustomAttributes.Owner = '';
AngleChangeDir.CoderInfo.CustomAttributes.PreserveDimensions = false;
AngleChangeDir.Description = 'It can be used to change the direction of the postion signal, but by default = 1';
AngleChangeDir.DataType = 'single';
AngleChangeDir.Min = -1;
AngleChangeDir.Max = 1;
AngleChangeDir.DocUnits = '';

%%
SpdChangeDir = Simulink.Parameter;
SpdChangeDir.Value = 1;
SpdChangeDir.CoderInfo.StorageClass = 'Custom';
SpdChangeDir.CoderInfo.Identifier = '';
SpdChangeDir.CoderInfo.Alignment = -1;
SpdChangeDir.CoderInfo.CustomStorageClass = 'ConstVolatile';
SpdChangeDir.CoderInfo.CustomAttributes.HeaderFile = '';
SpdChangeDir.CoderInfo.CustomAttributes.DefinitionFile = '';
SpdChangeDir.CoderInfo.CustomAttributes.Owner = '';
SpdChangeDir.CoderInfo.CustomAttributes.PreserveDimensions = false;
SpdChangeDir.Description = 'It can be used to change the direction of the speed signal, but by default = 1';
SpdChangeDir.DataType = 'single';
SpdChangeDir.Min = -1;
SpdChangeDir.Max = 1;
SpdChangeDir.DocUnits = '';


%%
IDcOvercurrent = Simulink.Parameter;
IDcOvercurrent.Value = 5;
IDcOvercurrent.CoderInfo.StorageClass = 'Custom';
IDcOvercurrent.CoderInfo.Identifier = '';
IDcOvercurrent.CoderInfo.Alignment = -1;
IDcOvercurrent.CoderInfo.CustomStorageClass = 'ConstVolatile';
IDcOvercurrent.CoderInfo.CustomAttributes.HeaderFile = '';
IDcOvercurrent.CoderInfo.CustomAttributes.DefinitionFile = '';
IDcOvercurrent.CoderInfo.CustomAttributes.Owner = '';
IDcOvercurrent.CoderInfo.CustomAttributes.PreserveDimensions = false;
IDcOvercurrent.Description = 'value of the overcurrent';
IDcOvercurrent.DataType = 'single';
IDcOvercurrent.Min = 0.1;
IDcOvercurrent.Max = 100;
IDcOvercurrent.DocUnits = 'A';

%%
IDcOvercurrentAlignment = Simulink.Parameter;
IDcOvercurrentAlignment.Value = 6;
IDcOvercurrentAlignment.CoderInfo.StorageClass = 'Custom';
IDcOvercurrentAlignment.CoderInfo.Identifier = '';
IDcOvercurrentAlignment.CoderInfo.Alignment = -1;
IDcOvercurrentAlignment.CoderInfo.CustomStorageClass = 'ConstVolatile';
IDcOvercurrentAlignment.CoderInfo.CustomAttributes.HeaderFile = '';
IDcOvercurrentAlignment.CoderInfo.CustomAttributes.DefinitionFile = '';
IDcOvercurrentAlignment.CoderInfo.CustomAttributes.Owner = '';
IDcOvercurrentAlignment.CoderInfo.CustomAttributes.PreserveDimensions = false;
IDcOvercurrentAlignment.Description = 'Idc overcurrent limit during rotor alignment to detect the encoder or resolver offset';
IDcOvercurrentAlignment.DataType = 'single';
IDcOvercurrentAlignment.Min = 0.1;
IDcOvercurrentAlignment.Max = 100;
IDcOvercurrentAlignment.DocUnits = 'A';

%% 
AlignmentIdRef = Simulink.Parameter;
AlignmentIdRef.Value = 0.3;
AlignmentIdRef.CoderInfo.StorageClass = 'Custom';
AlignmentIdRef.CoderInfo.Identifier = '';
AlignmentIdRef.CoderInfo.Alignment = -1;
AlignmentIdRef.CoderInfo.CustomStorageClass = 'ConstVolatile';
AlignmentIdRef.CoderInfo.CustomAttributes.HeaderFile = '';
AlignmentIdRef.CoderInfo.CustomAttributes.DefinitionFile = '';
AlignmentIdRef.CoderInfo.CustomAttributes.Owner = '';
AlignmentIdRef.CoderInfo.CustomAttributes.PreserveDimensions = false;
AlignmentIdRef.Description = 'The required IdRef ( which applaies a voltage vector) to aligne the rotor to detect the encoder or resolver offset';
AlignmentIdRef.DataType = 'single';
AlignmentIdRef.Min = 0.1;
AlignmentIdRef.Max = 100;
AlignmentIdRef.DocUnits = 'A';


%%
OffsetSelector = Simulink.Parameter;
OffsetSelector.Value = 0;
OffsetSelector.CoderInfo.StorageClass = 'Custom';
OffsetSelector.CoderInfo.Identifier = '';
OffsetSelector.CoderInfo.Alignment = -1;
OffsetSelector.CoderInfo.CustomStorageClass = 'ConstVolatile';
OffsetSelector.CoderInfo.CustomAttributes.HeaderFile = '';
OffsetSelector.CoderInfo.CustomAttributes.DefinitionFile = '';
OffsetSelector.CoderInfo.CustomAttributes.Owner = '';
OffsetSelector.CoderInfo.CustomAttributes.PreserveDimensions = false;
OffsetSelector.Description = 'switch to select the finial rotor offset either add to the actual rotor position or substract from the actual rotor position';
OffsetSelector.DataType = 'uint8';
OffsetSelector.Min = 0;
OffsetSelector.Max = 1;
OffsetSelector.DocUnits = '';


%%
ExecutionTimeFastLoop_FOC = Simulink.Parameter;
ExecutionTimeFastLoop_FOC.Value = 0;
ExecutionTimeFastLoop_FOC.CoderInfo.StorageClass = 'Custom';
ExecutionTimeFastLoop_FOC.CoderInfo.Identifier = '';
ExecutionTimeFastLoop_FOC.CoderInfo.Alignment = -1;
ExecutionTimeFastLoop_FOC.CoderInfo.CustomStorageClass = 'ConstVolatile';
ExecutionTimeFastLoop_FOC.CoderInfo.CustomAttributes.HeaderFile = '';
ExecutionTimeFastLoop_FOC.CoderInfo.CustomAttributes.DefinitionFile = '';
ExecutionTimeFastLoop_FOC.CoderInfo.CustomAttributes.Owner = '';
ExecutionTimeFastLoop_FOC.CoderInfo.CustomAttributes.PreserveDimensions = false;
ExecutionTimeFastLoop_FOC.Description = 'to measure the execution time of the subsystem';
ExecutionTimeFastLoop_FOC.DataType = 'single';
ExecutionTimeFastLoop_FOC.Min = 0;
ExecutionTimeFastLoop_FOC.Max = 1000000;
ExecutionTimeFastLoop_FOC.DocUnits = '';





%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%                %%%%%%%%%% Measurable Signals %%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%
ThetaOffsetIncEncoder = Simulink.Signal;
ThetaOffsetIncEncoder.CoderInfo.StorageClass = 'ExportedGlobal';
ThetaOffsetIncEncoder.Description = 'The detected rotor offset of the incremental encoder';
ThetaOffsetIncEncoder.DataType = 'single';
ThetaOffsetIncEncoder.Min = -1000;
ThetaOffsetIncEncoder.Max = 1000;
ThetaOffsetIncEncoder.DocUnits = 'rad';
ThetaOffsetIncEncoder.Dimensions = -1;
ThetaOffsetIncEncoder.DimensionsMode = 'auto';
ThetaOffsetIncEncoder.Complexity = 'real';
ThetaOffsetIncEncoder.SampleTime = -1;
ThetaOffsetIncEncoder.InitialValue = '0';

%%
SpeedActRpm = Simulink.Signal;
SpeedActRpm.CoderInfo.StorageClass = 'ExportedGlobal';
SpeedActRpm.Description = 'The measured actual speed in rpm';
SpeedActRpm.DataType = 'single';
SpeedActRpm.Min = -20000;
SpeedActRpm.Max = 20000;
SpeedActRpm.DocUnits = 'rpm';
SpeedActRpm.Dimensions = -1;
SpeedActRpm.DimensionsMode = 'auto';
SpeedActRpm.Complexity = 'real';
SpeedActRpm.SampleTime = -1;
SpeedActRpm.InitialValue = '0';
%% 
SpeedRef = Simulink.Signal;
SpeedRef.CoderInfo.StorageClass = 'ExportedGlobal';
SpeedRef.Description = 'The reference speed in rad/sec after filtered SPEED_Cmd';
SpeedRef.DataType = 'single';
SpeedRef.Min = -2000;
SpeedRef.Max = 2000;
SpeedRef.DocUnits = 'rad/sec';
SpeedRef.Dimensions = -1;
SpeedRef.DimensionsMode = 'auto';
SpeedRef.Complexity = 'real';
SpeedRef.SampleTime = -1;
SpeedRef.InitialValue = '0';

%% 
UAlpha = Simulink.Signal;
UAlpha.CoderInfo.StorageClass = 'ExportedGlobal';
UAlpha.Description = 'voltage on alpha axis related to the Alpha-Beta coordination system';
UAlpha.DataType = 'single';
UAlpha.Min = -500;
UAlpha.Max = 500;
UAlpha.DocUnits = 'V';
UAlpha.Dimensions = -1;
UAlpha.DimensionsMode = 'auto';
UAlpha.Complexity = 'real';
UAlpha.SampleTime = -1;
UAlpha.InitialValue = '0';
%% 
UBeta = Simulink.Signal;
UBeta.CoderInfo.StorageClass = 'ExportedGlobal';
UBeta.Description = 'voltage on beta axis related to the Alpha-Beta coordination system';
UBeta.DataType = 'single';
UBeta.Min = -500;
UBeta.Max = 500;
UBeta.DocUnits = 'V';
UBeta.Dimensions = -1;
UBeta.DimensionsMode = 'auto';
UBeta.Complexity = 'real';
UBeta.SampleTime = -1;
UBeta.InitialValue = '0';

%% 
PWMDutyCycle_A = Simulink.Signal;
PWMDutyCycle_A.CoderInfo.StorageClass = 'ExportedGlobal';
PWMDutyCycle_A.Description = 'Input of the PWM Phase A ';
PWMDutyCycle_A.DataType = 'single';
PWMDutyCycle_A.Min = -100;
PWMDutyCycle_A.Max = 100;
PWMDutyCycle_A.DocUnits = '-';
PWMDutyCycle_A.Dimensions = -1;
PWMDutyCycle_A.DimensionsMode = 'auto';
PWMDutyCycle_A.Complexity = 'real';
PWMDutyCycle_A.SampleTime = -1;
PWMDutyCycle_A.InitialValue = '0';
%% 
PWMDutyCycle_B = Simulink.Signal;
PWMDutyCycle_B.CoderInfo.StorageClass = 'ExportedGlobal';
PWMDutyCycle_B.Description = 'Input of the PWM Phase B ';
PWMDutyCycle_B.DataType = 'single';
PWMDutyCycle_B.Min = -100;
PWMDutyCycle_B.Max = 100;
PWMDutyCycle_B.DocUnits = '-';
PWMDutyCycle_B.Dimensions = -1;
PWMDutyCycle_B.DimensionsMode = 'auto';
PWMDutyCycle_B.Complexity = 'real';
PWMDutyCycle_B.SampleTime = -1;
PWMDutyCycle_B.InitialValue = '0';
%% 
PWMDutyCycle_C = Simulink.Signal;
PWMDutyCycle_C.CoderInfo.StorageClass = 'ExportedGlobal';
PWMDutyCycle_C.Description = 'Input of the PWM Phase C ';
PWMDutyCycle_C.DataType = 'single';
PWMDutyCycle_C.Min = -100;
PWMDutyCycle_C.Max = 100;
PWMDutyCycle_C.DocUnits = '-';
PWMDutyCycle_C.Dimensions = -1;
PWMDutyCycle_C.DimensionsMode = 'auto';
PWMDutyCycle_C.Complexity = 'real';
PWMDutyCycle_C.SampleTime = -1;
PWMDutyCycle_C.InitialValue = '0';

%% 
% RotorOffsetCalibSatusMotor1 = Simulink.Signal;
% RotorOffsetCalibSatusMotor1.CoderInfo.StorageClass = 'ExportedGlobal';
% RotorOffsetCalibSatusMotor1.Description = 'Status of the Rotor Offset Calibration of Motor1 ';
% RotorOffsetCalibSatusMotor1.DataType = 'boolen';
% RotorOffsetCalibSatusMotor1.Min = 0;
% RotorOffsetCalibSatusMotor1.Max = 1;
% RotorOffsetCalibSatusMotor1.DocUnits = '-';
% RotorOffsetCalibSatusMotor1.Dimensions = -1;
% RotorOffsetCalibSatusMotor1.DimensionsMode = 'auto';
% RotorOffsetCalibSatusMotor1.Complexity = 'real';
% RotorOffsetCalibSatusMotor1.SampleTime = -1;
% RotorOffsetCalibSatusMotor1.InitialValue = '0';

%% 
% RotorOffsetCalibSatusMotor2 = Simulink.Signal;
% RotorOffsetCalibSatusMotor2.CoderInfo.StorageClass = 'ExportedGlobal';
% RotorOffsetCalibSatusMotor2.Description = 'Status of the Rotor Offset Calibration of Motor2 ';
% RotorOffsetCalibSatusMotor2.DataType = 'boolen';
% RotorOffsetCalibSatusMotor2.Min = 0;
% RotorOffsetCalibSatusMotor2.Max = 1;
% RotorOffsetCalibSatusMotor2.DocUnits = '-';
% RotorOffsetCalibSatusMotor2.Dimensions = -1;
% RotorOffsetCalibSatusMotor2.DimensionsMode = 'auto';
% RotorOffsetCalibSatusMotor2.Complexity = 'real';
% RotorOffsetCalibSatusMotor2.SampleTime = -1;
% RotorOffsetCalibSatusMotor2.InitialValue = '0';

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%                %%%%%%%%%% Input Signals %%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%
SpeedCmd = Simulink.Signal;
SpeedCmd.CoderInfo.StorageClass = 'ExportedGlobal';
SpeedCmd.Description = 'The speed command in rpm';
SpeedCmd.DataType = 'single';
SpeedCmd.Min = -20000;
SpeedCmd.Max = 20000;
SpeedCmd.DocUnits = 'rad/sec';
SpeedCmd.Dimensions = -1;
SpeedCmd.DimensionsMode = 'auto';
SpeedCmd.Complexity = 'real';
SpeedCmd.SampleTime = -1;
SpeedCmd.InitialValue = '0';

%%
SpeedAct = Simulink.Signal;
SpeedAct.CoderInfo.StorageClass = 'ExportedGlobal';
SpeedAct.Description = 'The measured actual speed in rad/sec';
SpeedAct.DataType = 'single';
SpeedAct.Min = -200000;
SpeedAct.Max = 20000;
SpeedAct.DocUnits = 'rad/sec';
SpeedAct.Dimensions = -1;
SpeedAct.DimensionsMode = 'auto';
SpeedAct.Complexity = 'real';
SpeedAct.SampleTime = -1;
SpeedAct.InitialValue = '0';

%%
IQ_REF = Simulink.Signal;
IQ_REF.CoderInfo.StorageClass = 'ExportedGlobal';
IQ_REF.Description = 'The reference iq';
IQ_REF.DataType = 'single';
IQ_REF.Min = -100;
IQ_REF.Max = 100;
IQ_REF.DocUnits = 'A';
IQ_REF.Dimensions = -1;
IQ_REF.DimensionsMode = 'auto';
IQ_REF.Complexity = 'real';
IQ_REF.SampleTime = -1;
IQ_REF.InitialValue = '0';

%%
Torque_Ref = Simulink.Signal;
Torque_Ref.CoderInfo.StorageClass = 'ExportedGlobal';
Torque_Ref.Description = 'The reference torque';
Torque_Ref.DataType = 'single';
Torque_Ref.Min = -100;
Torque_Ref.Max =  100;
Torque_Ref.DocUnits = 'Nm';
Torque_Ref.Dimensions = -1;
Torque_Ref.DimensionsMode = 'auto';
Torque_Ref.Complexity = 'auto';
Torque_Ref.SampleTime = -1;
Torque_Ref.InitialValue = '0';
%%
AliveCounterStartGD = Simulink.Signal;
AliveCounterStartGD.CoderInfo.StorageClass = 'ExportedGlobal';
AliveCounterStartGD.Description = 'Alive counter to check the length of the Init of GateDriver';
AliveCounterStartGD.DataType = 'single';
AliveCounterStartGD.Min = -1000000;
AliveCounterStartGD.Max =  1000000;
AliveCounterStartGD.DocUnits = '-';
AliveCounterStartGD.Dimensions = -1;
AliveCounterStartGD.DimensionsMode = 'auto';
AliveCounterStartGD.Complexity = 'auto';
AliveCounterStartGD.SampleTime = -1;
AliveCounterStartGD.InitialValue = '0';

